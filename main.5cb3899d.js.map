{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageWin","messageLose","counter","rows","querySelectorAll","cells","tableSize","arrayCells","Array","i","length","fill","canHandleKeyDown","checkFreeSpace","row","includes","generateRandomCell","rowIndex","cellIndex","Math","floor","random","newValue","cell","children","textContent","classList","add","moveRight","movedRight","j","k","updateTable","moveLeft","movedLeft","moveUp","movedUp","moveDown","movedDown","forEach","className","value","score","calculateScore","checkWin","checkGameOver","addEventListener","e","contains","remove","preventDefault","key","Error"],"mappings":"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","file":"main.5cb3899d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst counter = document.querySelector('.game-score');\n\nconst rows = document.querySelectorAll('tr');\nconst cells = document.querySelectorAll('td');\n\nconst tableSize = 4;\n\nconst arrayCells = new Array(tableSize);\n\nfor (let i = 0; i < arrayCells.length; i++) {\n  arrayCells[i] = new Array(tableSize).fill(0);\n}\n\nlet canHandleKeyDown = false;\n\nbutton.addEventListener('click', e => {\n  canHandleKeyDown = true;\n\n  if (!button.classList.contains('restart')) {\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n    button.classList.remove('start');\n    messageStart.classList.add('hidden');\n  } else {\n    for (const element of arrayCells) {\n      element.fill(0);\n    }\n\n    updateTable();\n  }\n\n  generateRandomCell();\n  generateRandomCell();\n});\n\nfunction checkFreeSpace() {\n  for (const row of arrayCells) {\n    if (row.includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction generateRandomCell() {\n  if (!checkFreeSpace()) {\n    return;\n  }\n\n  let rowIndex, cellIndex;\n\n  do {\n    rowIndex = Math.floor(Math.random() * tableSize);\n    cellIndex = Math.floor(Math.random() * tableSize);\n  } while (arrayCells[rowIndex][cellIndex] !== 0);\n\n  if (arrayCells[rowIndex][cellIndex] === 0) {\n    const newValue = Math.random() < 0.75 ? 2 : 4;\n\n    arrayCells[rowIndex][cellIndex] = newValue;\n\n    const cell = rows[rowIndex].children[cellIndex];\n\n    cell.textContent = newValue;\n    cell.classList.add(`field-cell--${newValue}`);\n  }\n}\n\ndocument.addEventListener('keyup', e => {\n  e.preventDefault();\n\n  if (canHandleKeyDown) {\n    switch (e.key) {\n      case 'ArrowRight':\n        moveRight();\n        generateRandomCell();\n\n        if (checkGameOver()) {\n          messageLose.classList.remove('hidden');\n        }\n\n        if (checkWin()) {\n          messageWin.classList.remove('hidden');\n        }\n        break;\n\n      case 'ArrowLeft':\n        moveLeft();\n        generateRandomCell();\n\n        if (checkGameOver()) {\n          messageLose.classList.remove('hidden');\n        }\n\n        if (checkWin()) {\n          messageWin.classList.remove('hidden');\n        }\n        break;\n\n      case 'ArrowUp':\n        moveUp();\n        generateRandomCell();\n\n        if (checkGameOver()) {\n          messageLose.classList.remove('hidden');\n        }\n\n        if (checkWin()) {\n          messageWin.classList.remove('hidden');\n        }\n        break;\n\n      case 'ArrowDown':\n        moveDown();\n        generateRandomCell();\n\n        if (checkGameOver()) {\n          messageLose.classList.remove('hidden');\n        }\n\n        if (checkWin()) {\n          messageWin.classList.remove('hidden');\n        }\n        break;\n\n      default:\n        throw new Error('The wrong button was pressed');\n    }\n  }\n});\n\nfunction moveRight() {\n  let movedRight = false;\n\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = tableSize - 2; j >= 0; j--) {\n      if (arrayCells[i][j] !== 0) {\n        let k = j;\n\n        while (k < tableSize - 1) {\n          if (arrayCells[i][k + 1] === 0) {\n            arrayCells[i][k + 1] = arrayCells[i][k];\n            arrayCells[i][k] = 0;\n            k++;\n            movedRight = true;\n          } else if (arrayCells[i][k + 1] === arrayCells[i][k]) {\n            arrayCells[i][k + 1] *= 2;\n            arrayCells[i][k] = 0;\n            movedRight = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (movedRight) {\n    updateTable();\n  }\n}\n\nfunction moveLeft() {\n  let movedLeft = false;\n\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = 0; j < tableSize; j++) {\n      if (arrayCells[i][j] !== 0) {\n        let k = j;\n\n        while (k > 0) {\n          if (arrayCells[i][k - 1] === 0) {\n            arrayCells[i][k - 1] = arrayCells[i][k];\n            arrayCells[i][k] = 0;\n            k--;\n            movedLeft = true;\n          } else if (arrayCells[i][k - 1] === arrayCells[i][k]) {\n            arrayCells[i][k - 1] *= 2;\n            arrayCells[i][k] = 0;\n            movedLeft = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (movedLeft) {\n    updateTable();\n  }\n}\n\nfunction moveUp() {\n  let movedUp = false;\n\n  for (let j = 0; j < tableSize; j++) {\n    for (let i = 1; i < tableSize; i++) {\n      if (arrayCells[i][j] !== 0) {\n        let k = i;\n\n        while (k > 0) {\n          if (arrayCells[k - 1][j] === 0) {\n            arrayCells[k - 1][j] = arrayCells[k][j];\n            arrayCells[k][j] = 0;\n            k--;\n            movedUp = true;\n          } else if (arrayCells[k - 1][j] === arrayCells[k][j]) {\n            arrayCells[k - 1][j] *= 2;\n            arrayCells[k][j] = 0;\n            movedUp = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (movedUp) {\n    updateTable();\n  }\n}\n\nfunction moveDown() {\n  let movedDown = false;\n\n  for (let j = 0; j < tableSize; j++) {\n    for (let i = tableSize - 2; i >= 0; i--) {\n      if (arrayCells[i][j] !== 0) {\n        let k = i;\n\n        while (k < tableSize - 1) {\n          if (arrayCells[k + 1][j] === 0) {\n            arrayCells[k + 1][j] = arrayCells[k][j];\n            arrayCells[k][j] = 0;\n            k++;\n            movedDown = true;\n          } else if (arrayCells[k + 1][j] === arrayCells[k][j]) {\n            arrayCells[k + 1][j] *= 2;\n            arrayCells[k][j] = 0;\n            movedDown = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (movedDown) {\n    updateTable();\n  }\n}\n\nfunction updateTable() {\n  cells.forEach((cell) => {\n    cell.textContent = '';\n    cell.className = 'field-cell';\n  });\n\n  for (let i = 0; i < arrayCells.length; i++) {\n    for (let j = 0; j < arrayCells[i].length; j++) {\n      const cell = rows[i].children[j];\n      const value = arrayCells[i][j];\n\n      if (value !== 0) {\n        cell.textContent = value;\n        cell.classList.add(`field-cell--${value}`);\n      }\n    }\n  }\n\n  const score = calculateScore();\n\n  counter.textContent = score;\n}\n\nfunction checkWin() {\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = 0; j < tableSize; j++) {\n      if (arrayCells[i][j] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkGameOver() {\n  if (checkFreeSpace()) {\n    return false;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = 0; j < tableSize; j++) {\n      if (\n        (i !== tableSize - 1 && arrayCells[i][j] === arrayCells[i + 1][j])\n        || (j !== tableSize - 1 && arrayCells[i][j] === arrayCells[i][j + 1])\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction calculateScore() {\n  let score = 0;\n\n  for (let i = 0; i < tableSize; i++) {\n    for (let j = 0; j < tableSize; j++) {\n      score += arrayCells[i][j];\n    }\n  }\n\n  return score;\n}\n"]}